import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';

const Inventory = () => {
  const [selectedDept, setSelectedDept] = useState('');
  const [form, setForm] = useState({
    asset_no: '',
    asset_type: '',
    serial_no: '',
    manufacturer: '',
    model: '',
    version: '',
    os_info: '',
    status: 'Active',
    department: 'UNASSIGNED'
  });
  const [message, setMessage] = useState('');
  const [addedItems, setAddedItems] = useState({});
  const [DEPARTMENTS, setDEPARTMENTS] = useState([]);

  useEffect(() => {
    async function loadDepts() {
      try {
        const res = await fetch('/api/departments', { credentials: 'include' });
        if (res.ok) {
          const data = await res.json();
          if (Array.isArray(data)) setDEPARTMENTS(data.map(d => d.name));
        }
      } catch (err) {
        // ignore
      }
    }
    loadDepts();
  }, []);

  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });

  const handleSubmit = async e => {
    e.preventDefault();
    setMessage('');
    const payload = { ...form, department: form.department || 'UNASSIGNED' };
    try {
      const res = await fetch('/api/inventory', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
        credentials: 'include'
      });
      if (res.ok) {
        const created = await res.json();
        setMessage('Item added successfully!');
        setAddedItems(prev => {
          const dept = created.department || payload.department || 'UNASSIGNED';
          const deptItems = prev[dept] || [];
          return { ...prev, [dept]: [...deptItems, created] };
        });
        setForm({ asset_no: '', asset_type: '', serial_no: '', manufacturer: '', model: '', version: '', os_info: '', status: 'Active', department: payload.department || 'UNASSIGNED' });
      } else {
        const err = await res.json();
        setMessage(err.error || 'Failed to add item');
      }
    } catch (err) {
      setMessage('Error connecting to server.');
    }
  };

  return (
    <div className="container py-5">
      <div className="mb-3">
        <Link to="/" className="btn btn-outline-secondary"><i className="bi bi-arrow-left"></i> Back to Home</Link>
      </div>

      <h2 className="mb-4">Inventory</h2>

      <div className="mb-4">
        <h5>Filter Recently Added</h5>
        <div className="d-flex flex-wrap gap-2">
          {[...new Set(['UNASSIGNED', ...DEPARTMENTS])].map(dept => (
            <button key={dept} className={`btn btn-${selectedDept === dept ? 'primary' : 'outline-primary'}`} onClick={() => setSelectedDept(dept)}>{dept}</button>
          ))}
        </div>
      </div>

      <div className="card shadow mb-4">
        <div className="card-body">
          <h4 className="mb-3">Add Inventory Item</h4>
          {message && <div className="alert alert-info">{message}</div>}
          <form onSubmit={handleSubmit}>
            <div className="row g-3 mb-3">
              <div className="col-md-6">
                <label className="form-label">Department</label>
                <select className="form-select" name="department" value={form.department} onChange={handleChange}>
                  {[...new Set(['UNASSIGNED', ...DEPARTMENTS])].map(d => (
                    <option key={d} value={d}>{d}</option>
                  ))}
                </select>
                <div className="form-text">Choose which department this asset belongs to. If unknown leave as UNASSIGNED.</div>
              </div>
            </div>

            <div className="row g-3">
              <div className="col-md-6">
                <label className="form-label">Asset No</label>
                <input type="text" className="form-control" name="asset_no" value={form.asset_no} readOnly disabled placeholder="Auto-generated by server" />
                <div className="form-text">Asset number is generated automatically and cannot be edited.</div>
              </div>

              <div className="col-md-6">
                <label className="form-label">Asset Type</label>
                <input type="text" className="form-control" name="asset_type" value={form.asset_type} onChange={handleChange} placeholder="e.g. Laptop, Printer" required />
              </div>

              <div className="col-md-6">
                <label className="form-label">Serial No</label>
                <input type="text" className="form-control" name="serial_no" value={form.serial_no} onChange={handleChange} placeholder="e.g. SN123456" required />
              </div>

              <div className="col-md-6">
                <label className="form-label">Manufacturer</label>
                <input type="text" className="form-control" name="manufacturer" value={form.manufacturer} onChange={handleChange} placeholder="e.g. Dell" required />
              </div>

              <div className="col-md-6">
                <label className="form-label">Model</label>
                <input type="text" className="form-control" name="model" value={form.model} onChange={handleChange} placeholder="e.g. Latitude 5400" required />
              </div>

              <div className="col-md-6">
                <label className="form-label">Model Year</label>
                <input type="text" className="form-control" name="version" value={form.version} onChange={handleChange} placeholder="e.g. 2023" required />
              </div>

              <div className="col-md-6">
                <label className="form-label">Operating System</label>
                <input type="text" className="form-control" name="os_info" value={form.os_info} onChange={handleChange} placeholder="e.g. Windows 11" />
              </div>

              <div className="col-md-6">
                <label className="form-label">Status</label>
                <select className="form-select" name="status" value={form.status} onChange={handleChange} required>
                  <option>Active</option>
                  <option>Inactive</option>
                  <option>Repair</option>
                  <option>Disposed</option>
                </select>
              </div>
            </div>

            <button type="submit" className="btn btn-primary mt-3 w-100">Add Item</button>
          </form>
        </div>
      </div>

      <div className="card shadow">
        <div className="card-body">
          <h5>Recently Added Items{selectedDept ? ` for ${selectedDept}` : ''}</h5>
          {(selectedDept && addedItems[selectedDept] && addedItems[selectedDept].length > 0) ? (
            <table className="table table-bordered table-sm">
              <thead>
                <tr>
                  <th>Asset No</th>
                  <th>Asset Type</th>
                  <th>Serial No</th>
                  <th>Manufacturer</th>
                  <th>Model</th>
                  <th>Version</th>
                  <th>OS</th>
                  <th>Status</th>
                </tr>
              </thead>
              <tbody>
                {addedItems[selectedDept].map((item, idx) => (
                  <tr key={idx}>
                    <td>{item.asset_no}</td>
                    <td>{item.asset_type}</td>
                    <td>{item.serial_no}</td>
                    <td>{item.manufacturer}</td>
                    <td>{item.model}</td>
                    <td>{item.version}</td>
                    <td>{item.os_info}</td>
                    <td>{item.status}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          ) : (
            <div className="text-muted">No items added yet for this department.</div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Inventory;
